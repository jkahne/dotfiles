#!/usr/bin/env ruby

require 'yaml'
require_relative 'rvs_commands/rvs_base'
require_relative 'rvs_commands/fetch_and_rebase'
require_relative 'rvs_commands/push_to_qa'
require_relative 'rvs_commands/push_to_origin'
require_relative 'rvs_commands/jira_show'
require_relative 'rvs_commands/status_show'
require_relative 'rvs_commands/pr_create'
require_relative 'rvs_commands/pr_view'
require_relative 'rvs_commands/color'

system("clear") || system("cls")

data = YAML.load_file(File.expand_path('rvs_commands/config.yml', __dir__))

actual_commands_to_run = []

ARGV.each do |command| 
  # look for configurable variables, specifically 
  # like `qa=jeremy` to override the default.
  if command.include?("=")
    vars = command.split('=')
    data.merge!({vars[0] => vars[1]})
  end

  # extract the actual commands we know about
  if data['commands'].include?(command)
    actual_commands_to_run << command
  end
end

# do the work
Array(data['paths']).each do |app, directory|
  puts "↪ 🗂️ Changing to #{directory} ".h1

  actual_commands_to_run.each do |command| 
    command_list = Array(data['commands'][command])
    command_list.each do |cmd|
      puts "  #{cmd}  ".h2
      Object.const_get( cmd ).new(directory, data).doit
    end

    puts 
  end
end
